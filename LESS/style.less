// compress: true

@import "vars";

*,
::before,
::after {
    box-sizing: border-box;
    padding: 0;
    margin: 0;  
}

html {
    font-size: 42px;
}

body {
    width: 100vw;
    height: 100%;
    background-color: @background;
}

/* auto-complete
==========================*/

.absolute(@position: absolute, @top: 0,
    @left: 0, @width: 130px, @height: 130px) {
    position: @position;
    top: @top;
    left: @left;
    width: @width;
    height: @height;
}

.fontArial-col(@weight: 700, @size: 1rem, @color: @font-color) {
    font: @weight @size Arial, Helvetica, sans-serif;
    color: @color;
}

.game__title {
    .fontArial-col;
    line-height: 1.12rem;
    text-align: center;

    margin: 40px 0;
}

input[type="checkbox"] {
    display: none;

    &:checked+.card__sides {
        .card--front {
            transform: rotateY(180deg);
        }
        .card--back {
            transform: rotateY(360deg);
        }
    }
}

.game__field {
    list-style-type: none;

    display: grid;
    grid-template: repeat(3, 130px) e("/") repeat(4, 130px);
    grid-gap: .595rem .595rem;
    justify-content: center;

    margin-bottom: .714rem;
}

.game__card {
    position: relative;
    perspective: 600px;
}

.card--front, .card--back {
    .absolute;

    backface-visibility: hidden;
    background: @white;
    border-radius: 9px;
    box-shadow: 1px 1px 5px fade(@black, 50%);

    transition: transform @time_animation linear;

    cursor: pointer;
}

.card--front {
    &::before {
        content: "";
        .absolute(absolute, 5px, 5px, 120px, 120px);
        background: linear-gradient(to top right, rgba(34,171,147,1) 0%, rgba(25,102,141,1) 100%);
        border-radius: 4px;
    }
    transform: rotateY(0);
}

.card--back {
    display: flex;
    justify-content: center;
    align-items: center;
//    animation: opacity @time_animation steps(1) forwards;
    transform: rotateY(180deg);

    font-size: 1.786rem;
}

/* hide animation rotation on page load
=========================================*/

//@keyframes opacity {
//    0% {
//        opacity: 0;
//    }
//    100% {
//        opacity: 1;
//    }
//}

/* Timer
=====================================*/

.timer {
    list-style: none;

    display: flex;
    justify-content: center;
    flex-direction: row;
    align-items: center;

    margin-bottom: .714rem;

    .fontArial-col(400, .762rem, @font-color);
    line-height: .857rem;
}

.modal {
    .absolute(absolute, 0, 0, 100%, 100%);
    background: fade(@black, 30%);

    z-index: 100;
}

.modal__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-width: 350px;
    background: @white;
    text-align: center;
    .modal__title {
        .fontArial-col;
        font-size: 1.14rem;
        margin-top: 30px;

        span {
            display: inline-block;
            animation: floating .45s ease infinite alternate;
            transform-origin: bottom;
            transform: scale(1, .8);
            &:nth-child(n+1) {
                animation-delay: .1s;
            }
            &:nth-child(n+2) {
                animation-delay: .2s;
            }
            &:nth-child(n+3) {
                animation-delay: .3s;
            }
        }
    }
}

@keyframes floating {
    0% {
        transform: scale(1, .8);
    }
    100% {
        transform: scale(1, 1.4);
    }
}

.modal__btn {
    background: linear-gradient(to right, rgba(25,102,141,1) 0%, rgba(34,171,147,1) 100%);

    padding: 10px 30px;
    margin: 40px 0 30px;

    border: none;
    border-radius: 12px;
    box-shadow: 1px 1px 1px fade(@black, 50%);

    .fontArial-col(600, .476rem, @white);
    outline: 0;

    &:active {
        box-shadow: inset 2px 1px 8px fade(@black, 50%);
    }
}

/* Adaptive layout
=====================================*/
@media screen and (max-width: 640px) {
    .game__field {
        grid-template: repeat(4, 130px) e("/") repeat(3, 130px);
    }
}

@media screen and (max-width: 480px) {
    html {
        font-size: 30px;
    }
    .game__field {
        grid-template: repeat(4, 90px) e("/") repeat(3, 90px);
    }
    .card--front, .card--back {
        .absolute(absolute, 0, 0, 90px, 90px);
    }
    .card--front::before {
        .absolute(absolute, 5px, 5px, 80px, 80px);
    }
}

@media screen and (max-width: 350px) {
    .modal__content {
        min-width: 300px;
    }
}

/* for JS (cards matched or not)
===============================*/
.cards__matched {
    background: @light-green;
}

.cards__not_matched {
    background: @light-red;
}
